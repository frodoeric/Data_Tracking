# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class CreateTDataResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, tdata_id: str=None, vehicle_id: str=None, data_hora: datetime=None):  # noqa: E501
        """CreateTDataResponse - a model defined in Swagger

        :param tdata_id: The tdata_id of this CreateTDataResponse.  # noqa: E501
        :type tdata_id: str
        :param vehicle_id: The vehicle_id of this CreateTDataResponse.  # noqa: E501
        :type vehicle_id: str
        :param data_hora: The data_hora of this CreateTDataResponse.  # noqa: E501
        :type data_hora: datetime
        """
        self.swagger_types = {
            'tdata_id': str,
            'vehicle_id': str,
            'data_hora': datetime
        }

        self.attribute_map = {
            'tdata_id': 'tdataId',
            'vehicle_id': 'vehicleId',
            'data_hora': 'dataHora'
        }
        self._tdata_id = tdata_id
        self._vehicle_id = vehicle_id
        self._data_hora = data_hora

    @classmethod
    def from_dict(cls, dikt) -> 'CreateTDataResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateTDataResponse of this CreateTDataResponse.  # noqa: E501
        :rtype: CreateTDataResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tdata_id(self) -> str:
        """Gets the tdata_id of this CreateTDataResponse.


        :return: The tdata_id of this CreateTDataResponse.
        :rtype: str
        """
        return self._tdata_id

    @tdata_id.setter
    def tdata_id(self, tdata_id: str):
        """Sets the tdata_id of this CreateTDataResponse.


        :param tdata_id: The tdata_id of this CreateTDataResponse.
        :type tdata_id: str
        """

        self._tdata_id = tdata_id

    @property
    def vehicle_id(self) -> str:
        """Gets the vehicle_id of this CreateTDataResponse.


        :return: The vehicle_id of this CreateTDataResponse.
        :rtype: str
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id: str):
        """Sets the vehicle_id of this CreateTDataResponse.


        :param vehicle_id: The vehicle_id of this CreateTDataResponse.
        :type vehicle_id: str
        """
        if vehicle_id is None:
            raise ValueError("Invalid value for `vehicle_id`, must not be `None`")  # noqa: E501

        self._vehicle_id = vehicle_id

    @property
    def data_hora(self) -> datetime:
        """Gets the data_hora of this CreateTDataResponse.

        Data hora  # noqa: E501

        :return: The data_hora of this CreateTDataResponse.
        :rtype: datetime
        """
        return self._data_hora

    @data_hora.setter
    def data_hora(self, data_hora: datetime):
        """Sets the data_hora of this CreateTDataResponse.

        Data hora  # noqa: E501

        :param data_hora: The data_hora of this CreateTDataResponse.
        :type data_hora: datetime
        """
        if data_hora is None:
            raise ValueError("Invalid value for `data_hora`, must not be `None`")  # noqa: E501

        self._data_hora = data_hora
