# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class CreateTDataRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, vehicle_id: str=None):  # noqa: E501
        """CreateTDataRequest - a model defined in Swagger

        :param vehicle_id: The vehicle_id of this CreateTDataRequest.  # noqa: E501
        :type vehicle_id: str
        """
        self.swagger_types = {
            'vehicle_id': str
        }

        self.attribute_map = {
            'vehicle_id': 'vehicleId'
        }
        self._vehicle_id = vehicle_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateTDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateTDataRequest of this CreateTDataRequest.  # noqa: E501
        :rtype: CreateTDataRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vehicle_id(self) -> str:
        """Gets the vehicle_id of this CreateTDataRequest.


        :return: The vehicle_id of this CreateTDataRequest.
        :rtype: str
        """
        return self._vehicle_id

    @vehicle_id.setter
    def vehicle_id(self, vehicle_id: str):
        """Sets the vehicle_id of this CreateTDataRequest.


        :param vehicle_id: The vehicle_id of this CreateTDataRequest.
        :type vehicle_id: str
        """
        if vehicle_id is None:
            raise ValueError("Invalid value for `vehicle_id`, must not be `None`")  # noqa: E501

        self._vehicle_id = vehicle_id
